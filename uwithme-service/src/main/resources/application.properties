server.port=8081
#
## Spring Datasource Properties
spring.datasource.url=${UWITHME_JDBC_URL:jdbc:postgresql://localhost:5432/uwithme}
spring.datasource.username=${UWITHME_JDBC_USER:uwithme_user}
spring.datasource.password=${UWITHME_JDBC_PASSWORD:password}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.hikari.maximum-pool-size=35
spring.liquibase.change-log=classpath:/db/master.xml
#
## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.hibernate.ddl-auto=none
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL10Dialect
spring.jpa.properties.hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext
#
## Jackson Properties
spring.jackson.serialization.WRITE_DATES_AS_TIMESTAMPS=false
spring.jackson.time-zone=UTC
spring.jackson.serialization.fail-on-empty-beans=false
#
## Multipart Properties
spring.servlet.multipart.enabled=true
spring.servlet.multipart.file-size-threshold=2KB
spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=51MB
#
## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
main.upload.directory=uwithme-users-files
files.upload.directory=files
avatars.upload.directory=avatars
#
## Keycloak Properties
keycloak.auth-server-url=${UWITHME_KEYCLOAK_HOST:http://localhost:8080}
keycloak.realm=${UWITHME_KEYCLOAK_REALM:test}
keycloak.resource=${UWITHME_KEYCLOAK_CLIENT:uwm-service}
keycloak.credentials.secret=${UWITHME_KEYCLOAK_SECRET:7QBqMplShgrMrYbewRqreg0IPmN7akGA}
keycloak.bearer-only=true
#
spring.security.oauth2.client.registration.keycloak.provider=keycloak
spring.security.oauth2.client.registration.keycloak.client-id=${keycloak.resource}
spring.security.oauth2.client.registration.keycloak.client-secret=${keycloak.credentials.secret}
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=client_credentials
spring.security.oauth2.client.registration.keycloak.scope=openid
spring.security.oauth2.client.provider.keycloak.authorization-uri=${keycloak.auth-server-url}/realms/${keycloak.realm}/protocol/openid-connect/auth
spring.security.oauth2.client.provider.keycloak.token-uri=${keycloak.auth-server-url}/realms/${keycloak.realm}/protocol/openid-connect/token
#
## Common Properties
server.error.include-message=always
spring.main.allow-bean-definition-overriding=true